---
# YAML anchor for the repeated PHP packages
x-php-variant: &php-variant
  - if_platform: [linux]
    base_url: https://packages.couchbase.com/couchbase-server/deps/php
    actions:
      - url: ${BASE_URL}/${VERSION}/${PACKAGE}-${PLATFORM}-x86_64-${VERSION}.tgz
      - install_dir: /tmp/php
      - unarchive:

  - if_platform: [windows]
    base_url: https://packages.couchbase.com/couchbase-server/deps/php
    actions:
      - url: ${BASE_URL}/${VERSION}/${PACKAGE}-${PLATFORM}-amd64-${VERSION}.tgz
      - install_dir: C:\php
      - unarchive:

packages:
  java:
    - if_platform: [linux, windows, macosx]
      if_version: ">= 8, < 9"
      actions:
        - url: http://downloads.build.couchbase.com/jdk/jdk-${VERSION}-${PLATFORM}-x64.tar.gz
        - unarchive:
        - rename_dir: jdk1.${VERSION_MAJOR}.0_${VERSION_BUILD}

    - if_platform: [linux]
      if_version: ">= 11"
      actions:
        - url: http://downloads.build.couchbase.com/jdk/jdk-${VERSION}_${PLATFORM}-x64_bin.tar.gz
        - unarchive:
        - rename_dir: jdk-${VERSION}

    - if_platform: [windows]
      if_version: ">= 11"
      actions:
        - url: http://downloads.build.couchbase.com/jdk/jdk-${VERSION}_${PLATFORM}-x64_bin.zip
        - unarchive:
        - rename_dir: jdk-${VERSION}

    - if_platform: [osx]
      if_version: ">= 11"
      actions:
        - url: http://downloads.build.couchbase.com/jdk/jdk-${VERSION}_${PLATFORM}-x64_bin.tar.gz
        - unarchive:
        - rename_dir: jdk-${VERSION}.jdk/Contents/Home
        - run: |
            rm -rf ${INSTALL_DIR}/jdk-${VERSION}.jdk

  openjdk-ea:
    - if_platform: [linux, windows, osx]
      actions:
        - url: https://download.java.net/java/early_access/jdk${VERSION_MAJOR}/${VERSION_BUILD}/GPL/openjdk-${VERSION_MAJOR}-ea+${VERSION_BUILD}_${PLATFORM}-x64_bin.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk-${VERSION_MAJOR}

  openjdk:
    - if_platform: [linux, windows]
      if_version: ">= 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk-${VERSION}/OpenJDK${VERSION_MAJOR}U-jdk_x64_${PLATFORM}_hotspot_${VERSION_MAJORMINORPATCH}_${VERSION_BUILD}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk-${VERSION_MAJORMINORPATCH}+${VERSION_BUILD}

    # Ridiculous workaround to JDK's ridiculous random version-naming and
    # file-naming changes
    - if_platform: [mac]
      if_version: ">= 11.0.4.11.2, < 11.0.4.12"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-${VERSION}/OpenJDK11U-jdk_x64_${PLATFORM}_hotspot_11.0.4_11.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk-11.0.4+11/Contents/Home
        - run: |
            rm -rf ${INSTALL_DIR}/jdk-11.0.4+11 ${INSTALL_DIR}/._jdk-11.0.4+11

    - if_platform: [mac]
      if_version: ">= 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk-${VERSION}/OpenJDK${VERSION_MAJOR}U-jdk_x64_${PLATFORM}_hotspot_${VERSION_MAJORMINORPATCH}_${VERSION_BUILD}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk-${VERSION_MAJORMINORPATCH}+${VERSION_BUILD}/Contents/Home
        - run: |
            rm -rf ${INSTALL_DIR}/jdk-${VERSION} ${INSTALL_DIR}/._jdk-${VERSION}

    - if_platform: [linux, windows]
      if_version: ">= 8, < 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}/OpenJDK${VERSION_MAJOR}U-jdk_x64_${PLATFORM}_hotspot_${VERSION_MAJOR}u${VERSION_MINOR}b${VERSION_PATCH}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}

    - if_platform: [mac]
      if_version: ">= 8, < 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}/OpenJDK${VERSION_MAJOR}U-jdk_x64_${PLATFORM}_hotspot_${VERSION_MAJOR}u${VERSION_MINOR}b${VERSION_PATCH}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}/Contents/Home
        - run: |
            rm -rf ${INSTALL_DIR}/jdk${VERSION} ${INSTALL_DIR}/._jdk${VERSION}

  openjdk-jre:
    - if_platform: [linux, windows]
      if_version: ">= 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk-${VERSION}/OpenJDK${VERSION_MAJOR}U-jre_x64_${PLATFORM}_hotspot_${VERSION_MAJORMINORPATCH}_${VERSION_BUILD}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk-${VERSION_MAJORMINORPATCH}+${VERSION_BUILD}-jre

    # Ridiculous workaround to JDK's ridiculous random version-naming and
    # file-naming changes
    - if_platform: [mac]
      if_version: ">= 11.0.4.11.2, < 11.0.4.12"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-${VERSION}/OpenJDK11U-jre_x64_${PLATFORM}_hotspot_11.0.4_11.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk-11.0.4+11-jre/Contents/Home
        - run: |
            rm -rf ${INSTALL_DIR}/jdk-11.0.4+11-jre ${INSTALL_DIR}/._jdk-11.0.4+11-jre

    - if_platform: [mac]
      if_version: ">= 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk-${VERSION}/OpenJDK${VERSION_MAJOR}U-jre_x64_${PLATFORM}_hotspot_${VERSION_MAJORMINORPATCH}_${VERSION_BUILD}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk-${VERSION_MAJORMINORPATCH}+${VERSION_BUILD}-jre/Contents/Home
        - run: |
            rm -rf ${INSTALL_DIR}/jdk-${VERSION}-jre ${INSTALL_DIR}/._jdk-${VERSION}-jre

    - if_platform: [linux, windows]
      if_version: ">= 8, < 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}/OpenJDK${VERSION_MAJOR}U-jre_x64_${PLATFORM}_hotspot_${VERSION_MAJOR}u${VERSION_MINOR}b${VERSION_PATCH}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}-jre

    - if_platform: [mac]
      if_version: ">= 8, < 9"
      actions:
        - url: https://github.com/AdoptOpenJDK/openjdk${VERSION_MAJOR}-binaries/releases/download/jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}/OpenJDK${VERSION_MAJOR}U-jre_x64_${PLATFORM}_hotspot_${VERSION_MAJOR}u${VERSION_MINOR}b${VERSION_PATCH}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: jdk${VERSION_MAJOR}u${VERSION_MINOR}-b${VERSION_PATCH}-jre/Contents/Home
        - run: |
            rm -rf ${INSTALL_DIR}/jdk${VERSION}-jre ${INSTALL_DIR}/._jdk${VERSION}-jre

  corretto:
    - if_platform: [linux, macosx, windows]
      actions:
        - url: https://d3pxv6yz143wms.cloudfront.net/${VERSION}/amazon-corretto-${VERSION}-${PLATFORM}-x64.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: amazon-corretto-${VERSION}-${PLATFORM}-x64

  # Python: We use pyenv on Linux and MacOS to support building various
  # versions of Python. On Windows we download the pre-built installers
  # from python.org.
  # For Python >= 3.3, we then create a venv in the specified "install"
  # directory. For Python 2.7.x we instead create a virtualenv.
  # We don't support Python 3.0-3.2.x which didn't have venv.
  # We don't support Python 2.7.x on Windows. Those installers were
  # provided as an MSI so we'd need a different install command here.
  python:
    - if_platform: [linux, macos]
      if_version: ">= 3.3"
      actions:
        - run: |
            git clone git://github.com/pyenv/pyenv.git ${HOME}/.pyenv 2>/dev/null || true
            cd ${HOME}/.pyenv && git pull
            ${HOME}/.pyenv/bin/pyenv install ${VERSION}
          fixed_dir: ${HOME}/.pyenv/versions/${VERSION}
        - run: |
            ${FIXED_DIR}/bin/python -m venv ${INSTALL_DIR}/python${VERSION}

    - if_platform: [linux, macos]
      if_version: ">= 2.7, < 3.0"
      actions:
        - run: |
            git clone git://github.com/pyenv/pyenv.git ${HOME}/.pyenv 2>/dev/null || true
            cd ${HOME}/.pyenv && git pull
            ${HOME}/.pyenv/bin/pyenv install ${VERSION}
            ${FIXED_DIR}/bin/python -m pip install virtualenv
          fixed_dir: ${HOME}/.pyenv/versions/${VERSION}
        - run: |
            ${FIXED_DIR}/bin/python -m virtualenv ${INSTALL_DIR}/python${VERSION}

    - if_platform: [windows]
      if_version: ">= 3.3"
      set_arch: ["", "-amd64"]
      actions:
        - cbdep: wix
          version: 3.11.1
          install_dir: C:\cbdep-priv
        - url: https://www.python.org/ftp/python/${VERSION}/python-${VERSION}${ARCH}.exe
        - run: |
            C:\cbdep-priv\wix-3.11.1\dark.exe -x ${TEMP_DIR} ${DL}
            msiexec /qn /a ${TEMP_DIR}\AttachedContainer\core.msi TARGETDIR=${FIXED_DIR}
            msiexec /qn /a ${TEMP_DIR}\AttachedContainer\lib.msi TARGETDIR=${FIXED_DIR}
            msiexec /qn /a ${TEMP_DIR}\AttachedContainer\dev.msi TARGETDIR=${FIXED_DIR}
            msiexec /qn /a ${TEMP_DIR}\AttachedContainer\exe.msi TARGETDIR=${FIXED_DIR}
            del ${FIXED_DIR}\*.msi
            ${FIXED_DIR}\python.exe -E -s -m ensurepip --default-pip
          fixed_dir: C:\cbdep-priv\Python${VERSION}${ARCH}
        - run: |
            ${FIXED_DIR}\python.exe -m venv ${INSTALL_DIR}\python${VERSION}${ARCH}

  # Miniconda is an alternative Python distribution. We support Miniconda3,
  # based on Python 3.
  miniconda3:
    - if_platform: [Linux, MacOSX]
      set_arch: ["x86", "x86_64"]
      actions:
        - url: https://repo.anaconda.com/miniconda/Miniconda3-${VERSION}-${PLATFORM}-${ARCH}.sh
        - run: sh ${DL} -b -f -p ${INSTALL_DIR}/miniconda3-${VERSION}
    - if_platform: [Windows]
      set_arch: ["x86", "x86_64"]
      actions:
        - url: https://repo.anaconda.com/miniconda/Miniconda3-${VERSION}-${PLATFORM}-${ARCH}.exe
        - run: start /wait ${DL} /NoRegistry=1 /S /D=${INSTALL_DIR}\miniconda3-${VERSION}

  # And sadly we support miniconda2 for as long as it exists.
  miniconda2:
    - if_platform: [Linux, MacOSX]
      set_arch: ["x86", "x86_64"]
      actions:
        - url: https://repo.anaconda.com/miniconda/Miniconda2-${VERSION}-${PLATFORM}-${ARCH}.sh
        - run: sh ${DL} -b -f -p ${INSTALL_DIR}/miniconda2-${VERSION}
    - if_platform: [Windows]
      set_arch: ["x86", "x86_64"]
      actions:
        - url: https://repo.anaconda.com/miniconda/Miniconda2-${VERSION}-${PLATFORM}-${ARCH}.exe
        - run: start /wait ${DL} /NoRegistry=1 /S /D=${INSTALL_DIR}\miniconda2-${VERSION}

  wix:
    - if_platform: [windows]
      actions:
        - url: https://github.com/wixtoolset/wix${VERSION_MAJOR}/releases/download/wix${VERSION_MAJOR}${VERSION_MINOR}${VERSION_PATCH}rtm/wix${VERSION_MAJOR}${VERSION_MINOR}-binaries.zip
        - unarchive:
          add_dir: wix-${VERSION}

  bat_to_exe_converter:
    - if_platform: [windows]
      actions:
        - url: http://www.f2ko.de/downloads/Bat_To_Exe_Converter.zip
        - unarchive:
          add_dir: bat_to_exe_converter
        - run: ren ${INSTALL_DIR}\bat_to_exe_converter\Portable bin
        - run: del ${INSTALL_DIR}\bat_to_exe_converter\*.exe

  jq:
    - if_platform: [linux]
      actions:
        - url: https://github.com/stedolan/jq/releases/download/jq-${VERSION}/jq-linux64
        - run: |
            mkdir -p ${INSTALL_DIR}/jq-${VERSION}/bin
            cp ${DL} ${INSTALL_DIR}/jq-${VERSION}/bin/jq
            chmod 755 ${INSTALL_DIR}/jq-${VERSION}/bin/jq
    - if_platform: [darwin]
      actions:
        - url: https://github.com/stedolan/jq/releases/download/jq-${VERSION}/jq-osx-amd64
        - run: |
            mkdir -p ${INSTALL_DIR}/jq-${VERSION}/bin
            cp ${DL} ${INSTALL_DIR}/jq-${VERSION}/bin/jq
            chmod 755 ${INSTALL_DIR}/jq-${VERSION}/bin/jq
    - if_platform: [windows]
      actions:
        - url: https://github.com/stedolan/jq/releases/download/jq-${VERSION}/jq-win64.exe
        - run: |
            mkdir ${INSTALL_DIR}\jq-${VERSION}\bin
            copy ${DL} ${INSTALL_DIR}\jq-${VERSION}\bin\jq.exe

  prometheus:
    - if_platform: [linux, darwin, windows]
      actions:
        - url: https://github.com/prometheus/prometheus/releases/download/v${VERSION}/prometheus-${VERSION}.${PLATFORM}-amd64.tar.gz
        - unarchive:
        - rename_dir: prometheus-${VERSION}.${PLATFORM}-amd64

  golang:
    - if_platform: [linux, darwin]
      actions:
        - url: https://dl.google.com/go/go${VERSION}.${PLATFORM}-amd64.tar.gz
        - unarchive:
        - run: mv ${INSTALL_DIR}/go ${INSTALL_DIR}/go${VERSION}
    - if_platform: windows
      actions:
        - url: https://dl.google.com/go/go${VERSION}.windows-amd64.zip
        - unarchive:
        - run: move ${INSTALL_DIR}\go ${INSTALL_DIR}\go${VERSION}

  # .NET Core (SDK and Runtime) - download URLs are the same for all versions
  # on MacOS and Windows. However on Linux, the URLs for .NET Core 1.x are
  # more specific and name explicit Linux distros. Therefore we need three
  # different blocks here per package - one for all versions on Windows/MacOS,
  # one for .NET Core 2.x on "linux", and one for .NET Core 1.x on specific
  # linux distros.
  dotnet-core-sdk:
    - if_platform: [windows, macos]
      actions:
        - url: https://www.microsoft.com/net/download/thank-you/dotnet-sdk-${VERSION}-${PLATFORM}-x64-binaries
          scrape_html: window.open\("(.*?)"
        - unarchive:
          add_dir: dotnet-core-sdk-${VERSION}

    - if_platform: [linux]
      if_version: ">= 2.0"
      actions:
        - url: https://www.microsoft.com/net/download/thank-you/dotnet-sdk-${VERSION}-${PLATFORM}-x64-binaries
          scrape_html: window.open\("(.*?)"
        - unarchive:
          add_dir: dotnet-core-sdk-${VERSION}

    - if_platform: [ubuntu-16.04, ubuntu-14.04, centos, debian]
      if_version: ">= 1.0, < 2.0"
      actions:
        - url: https://www.microsoft.com/net/download/thank-you/dotnet-sdk-${VERSION}-linux-${PLATFORM}-x64-binaries
          scrape_html: window.open\("(.*?)"
        - unarchive:
          add_dir: dotnet-core-sdk-${VERSION}

  dotnet-core-runtime:
    - if_platform: [windows, macos]
      actions:
        - url: https://www.microsoft.com/net/download/thank-you/dotnet-runtime-${VERSION}-${PLATFORM}-x64-binaries
          scrape_html: window.open\("(.*?)"
        - unarchive:
          add_dir: dotnet-core-runtime-${VERSION}

    - if_platform: [linux]
      if_version: ">= 2.0"
      actions:
        - url: https://www.microsoft.com/net/download/thank-you/dotnet-runtime-${VERSION}-${PLATFORM}-x64-binaries
          scrape_html: window.open\("(.*?)"
        - unarchive:
          add_dir: dotnet-core-runtime-${VERSION}

    - if_platform: [ubuntu-16.04, ubuntu-14.04, centos, debian]
      if_version: ">= 1.0, < 2.0"
      actions:
        - url: https://www.microsoft.com/net/download/thank-you/dotnet-runtime-${VERSION}-linux-${PLATFORM}-x64-binaries
          scrape_html: window.open\("(.*?)"
        - unarchive:
          add_dir: dotnet-core-runtime-${VERSION}

  docker:
    - if_platform: [linux, mac]
      actions:
        - url: https://download.docker.com/${PLATFORM}/static/stable/x86_64/docker-${VERSION}-ce.tgz
        - unarchive:

  nodejs:
    - if_platform: [linux, darwin, win]
      set_arch: [x86, x64]
      actions:
        - url: https://nodejs.org/dist/v${VERSION}/node-v${VERSION}-${PLATFORM}-${ARCH}.${PLATFORM_EXT}
        - unarchive:
        - rename_dir: node-v${VERSION}-${PLATFORM}-${ARCH}

  # Older, deprecated "php" combined packages
  php:
    - if_platform: [linux, windows]
      base_url: https://packages.couchbase.com/couchbase-server/deps/php
      actions:
        - url: ${BASE_URL}/${VERSION}/php-${PLATFORM}-x86_64-${VERSION}.tgz
        - unarchive:

  # Newer, separated PHP packages
  php-zts: *php-variant
  php-nts: *php-variant
  php-zts-default: *php-variant
  php-nts-default: *php-variant
  php-zts-igbinary: *php-variant
  php-nts-igbinary: *php-variant

  libcouchbase_vc11:
    - if_platform: [windows]
      set_arch: [x86, amd64]
      base_url: https://packages.couchbase.com/clients/c
      actions:
        - url: ${BASE_URL}/libcouchbase-${VERSION}_vc11_${ARCH}.zip
        - unarchive:
        - rename_dir: libcouchbase-${VERSION}_vc11_${ARCH}

  libcouchbase_vc14:
    - if_platform: [windows]
      set_arch: [x86, amd64]
      base_url: https://packages.couchbase.com/clients/c
      actions:
        - url: ${BASE_URL}/libcouchbase-${VERSION}_vc14_${ARCH}.zip
        - unarchive:
        - rename_dir: libcouchbase-${VERSION}_vc14_${ARCH}

  libcouchbase_vc15:
    - if_platform: [windows]
      set_arch: [x86, amd64]
      base_url: https://packages.couchbase.com/clients/c
      actions:
        - url: ${BASE_URL}/libcouchbase-${VERSION}_vc15_${ARCH}.zip
        - unarchive:
        - rename_dir: libcouchbase-${VERSION}_vc15_${ARCH}

  couchbasemock:
    - if_platform: [linux, windows, macosx]
      if_version: "=="
      base_url: https://packages.couchbase.com/clients/c
      actions:
        - url: ${BASE_URL}/mock/CouchbaseMock-LATEST.jar

    - if_platform: [linux, windows, macosx]
      base_url: https://packages.couchbase.com/clients/c
      actions:
        - url: ${BASE_URL}/mock/CouchbaseMock-${VERSION}.jar

  # Internal requirement for Mad-Hatter builds.
  analytics-jars:
    - base_url: https://packages.couchbase.com/releases
      actions:
      - url: ${BASE_URL}/${VERSION_MAJORMINORPATCH}/analytics-jars-${VERSION}.tar.gz
      - unarchive:
        add_dir: analytics-jars-${VERSION}

# Stock descriptor for handling all "classic" cbdeps 1.0 packages,
# along with a list of their package names
classic-cbdeps:
  packages:
    - boost
    - breakpad
    - curl
    - double-conversion
    - erlang
    - flatbuffers
    - flex
    - folly
    - gflags
    - glog
    - golang
    - gperftools
    - grpc
    - icu4c
    - jemalloc
    - json
    - libcouchbase
    - libcxx
    - libevent
    - libsqlite3
    - libstdcxx
    - libuv
    - lz4
    - maven
    - numactl
    - openjdk-rt
    - openssl
    - openssl_h
    - pcre
    - rocksdb
    - snappy
    - v8
    - zlib

  descriptor:
    - if_platform: [
        amzn2,
        centos6, centos7, centos8,
        debian7, debian8, debian9, debian10,
        rhel8,
        suse11, suse12, suse15,
        ubuntu14.04, ubuntu16.04, ubuntu18.04, ubuntu20.04
      ]
      set_arch: ['', x86_64]
      base_url: https://packages.couchbase.com/couchbase-server/deps
      actions:
        - url:
          - ${BASE_URL}/${PACKAGE}/${VERSION}/${PACKAGE}-${PLATFORM}-${ARCH}-${VERSION}.tgz
          - ${BASE_URL}/${PACKAGE}/${VERSION_MAJORMINORPATCH}/${VERSION_BUILD}/${PACKAGE}-${PLATFORM}-${ARCH}-${VERSION}.tgz
        - unarchive:
          add_dir: ${PACKAGE}-${VERSION}

    - if_platform: [
        macosx-arm64,
        macosx-x86_64
      ]
      set_arch: ['', x86_64, arm64]
      base_url: https://packages.couchbase.com/couchbase-server/deps
      actions:
        - url:
          - ${BASE_URL}/${PACKAGE}/${VERSION}/${PACKAGE}-${PLATFORM}-${ARCH}-${VERSION}.tgz
          - ${BASE_URL}/${PACKAGE}/${VERSION_MAJORMINORPATCH}/${VERSION_BUILD}/${PACKAGE}-${PLATFORM}-${VERSION}.tgz
        - unarchive:
          add_dir: ${PACKAGE}-${VERSION}

    - if_platform: [
        windows_msvc2015, windows_msvc2017, windows_msvc2019,
      ]
      set_arch: [x86, amd64]
      base_url: https://packages.couchbase.com/couchbase-server/deps
      actions:
        - url:
          - ${BASE_URL}/${PACKAGE}/${VERSION}/${PACKAGE}-${PLATFORM}-${ARCH}-${VERSION}.tgz
          - ${BASE_URL}/${PACKAGE}/${VERSION_MAJORMINORPATCH}/${VERSION_BUILD}/${PACKAGE}-${PLATFORM}-${ARCH}-${VERSION}.tgz
        - unarchive:
          add_dir: ${PACKAGE}-${VERSION}
